noblitz;

uses
	drx3D/CoreX,
	drx3D/DinrusXRend;

options(WIN32) "-DDRX_RENDERER_DIRECT3D -DDRX_RENDERER_VULKAN=10 -DEXCLUDE_AMD_API";

file
	Common\AbstractMeshElement.cpp,
	Common\CameraOrbs.cpp,
	Common\ChromaticRing.cpp,
	Common\CImage.cpp,
	Common\CommonRender.cpp,
	Common\CREBreakableGlass.cpp,
	Common\CREClientPoly.cpp,
	Common\CREDeferredShading.cpp,
	Common\CREFarTreeSprites.cpp,
	Common\CREFogVolume.cpp,
	Common\CREGameEffect.cpp,
	Common\CREGeomCache.cpp,
	Common\CREMesh.cpp,
	Common\CREOclusionQuery.cpp,
	Common\CREParticle.cpp,
	Common\CRESky.cpp,
	Common\CREWaterOcean.cpp,
	Common\CREWaterVolume.cpp,
	Common\DDSImage.cpp,
	Common\DeferredRenderUtils.cpp,
	Common\DynTexture.cpp,
	Common\FlareSoftOcclusionQuery.cpp,
	Common\Ghost.cpp,
	Common\Glow.cpp,
	Common\ImageSpaceShafts.cpp,
	Common\IntroMovieRenderer.cpp,
	Common\IrisShafts.cpp,
	Common\ITextureStreamer.cpp,
	Common\JpgImage.cpp,
	Common\LightVolumeBuffer.cpp,
	Common\lzss.cpp,
	Common\MatrixStack.cpp,
	Common\MeshUtil.cpp,
	Common\OpticsElement.cpp,
	Common\OpticsFactory.cpp,
	Common\OpticsGroup.cpp,
	Common\OpticsProxy.cpp,
	Common\OpticsReference.cpp,
	Common\OptimizeTransparentRenderItemsResolves.cpp,
	Common\Parser.cpp,
	Common\ParserBin.cpp,
	Common\ParticleBuffer.cpp,
	Common\PlanningTextureStreamer.cpp,
	Common\PlanningTextureStreamer_Jobs.cpp,
	Common\PngImage.cpp,
	Common\PolygonMath2D.cpp,
	Common\PostEffects.cpp,
	Common\PostProcess.cpp,
	Common\PostProcessUtils.cpp,
	Common\PowerOf2BlockPacker.cpp,
	Common\RemoteCompiler.cpp,
	Common\RendElement.cpp,
	Common\RenderAuxGeom.cpp,
	Common\RenderDisplayContext.cpp,
	Common\Renderer.cpp,
	Common\Renderer_Jobs.cpp,
	Common\RendererCVars.cpp,
	Common\RendererResources.cpp,
	Common\RenderItemDrawer.cpp,
	Common\RenderMesh.cpp,
	Common\RenderMesh_Render.cpp,
	Common\RenderMesh_SetMesh.cpp,
	Common\RenderOutput.cpp,
	Common\RenderPipeline.cpp,
	Common\RenderThread.cpp,
	Common\RenderView.cpp,
	Common\ResFile.cpp,
	Common\ResFileLookupDataMan.cpp,
	Common\RootOpticsElement.cpp,
	Common\ShaderCache.cpp,
	Common\ShaderComponents.cpp,
	Common\ShaderCore.cpp,
	Common\ShaderFXParseBin.cpp,
	Common\ShaderParse.cpp,
	Common\ShaderPublicParams.cpp,
	Common\ShaderRenderResources.cpp,
	Common\ShaderResources.cpp,
	Common\ShaderScript.cpp,
	Common\ShaderSerialize.cpp,
	Common\ShaderTemplate.cpp,
	Common\Shadow_Renderer.cpp,
	Common\ShadowUtils.cpp,
	Common\StatoscopeTextureStreaming.cpp,
	Common\Streaks.cpp,
	Common\SwapChain.cpp,
	Common\TextMessages.cpp,
	Common\Texture.cpp,
	Common\TextureCompiler.cpp,
	Common\TextureHelpers.cpp,
	Common\TextureStreaming.cpp,
	Common\TextureUpr.cpp,
	Common\TgaImage.cpp,
	Common\TifImage.cpp,
	Common\WaterUtils.cpp,
	Scaleform readonly separator,
	Scaleform\Scaleform.cpp,
	Scaleform\ScaleformPlayback.cpp,
	Scaleform\ScaleformRender.cpp,
	end readonly separator;

mainconfig
	"" = "SHARED",
	"DinrusXR.dll" = "DLL";

